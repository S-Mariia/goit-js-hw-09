{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASO,EAA8BC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MACjDJ,EAAAa,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAG/D,SAASY,EAA2BJ,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAC9CJ,EAAAa,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAxC7Cc,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA6BC,GAC3BA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,OAAOC,SAAnCrB,EAAwBmB,EAAxBnB,MAAOsB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACrB,GAAIvB,EAAMwB,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,MAAQ,EAEtD,YADAC,MAAM,oCAIR,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOJ,EAAOC,OAAQE,GAAK,EAAG,CACjD,IAAME,EAAWD,OAAO3B,EAAMwB,QAAUE,EAAI,GAAKC,OAAOL,EAAKE,OAE7D1B,EAAc4B,EAAGE,GACdC,KAAKtB,GACLuB,MAAMlB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmitButtonClick);\n\nfunction onSubmitButtonClick(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.target.elements;\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    alert('Please enter non-negative values');\n    return;\n  }\n\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    const newDelay = Number(delay.value) + (i - 1) * Number(step.value);\n\n    createPromise(i, newDelay)\n      .then(displaySuccessfulNotification)\n      .catch(displayFailureNotification);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction displaySuccessfulNotification({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction displayFailureNotification({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);  \n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$displaySuccessfulNotification","param","Notify","success","concat","$ce04d3a99e08e73b$var$displayFailureNotification","failure","document","querySelector","addEventListener","evt","preventDefault","_elements","target","elements","step","amount","value","alert","i","Number","newDelay","then","catch"],"version":3,"file":"03-promises.124c1844.js.map"}